a <-- available.packages()
a <- available.packages()
View(a)
head (rownames(a),3)
install.packages("slidify")
head(rownames(s),5)
head(rownames(d),3)
head(rownames(a), 5)
head(rownames(s), 9514)
install.packages("slidify")
install.packages("STAND")
library(STAND)
search()
head (rownames(a),3)
view(s)
View(s)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
swirl()
library(swill)
library(swirl)
swirl()
library(dplyr)
exit()
info()
main()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
swirl()
swirl()
library(swirl)
swirl()
0
info()
main()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind|Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit
myedit("plot2.r")
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtoffile("myLabels.R"))
source(pathtoffile("myLabels.R"))
source(pathoffile("myLabels.R"))
source(pathtofile("myLabels.R"))
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
info()
main()
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(,1, len = 6))
pal(seq(0,1, len=6))
p1 <- colorRampPalette(c("red". "blue"))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
p1(20)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 5)
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
ploy
plot(x,y, pch = 19, col = rgb(0, .5, .5))
plot(x,y, pch = 19, col = rgb(0, .5, .5, .3))
play()
plot(x,y, pch = 19, col = rgb(0, .5, .8, .3))
plot(x,y, pch = 19, col = rgb(.7, .5, .5, .3))
plot(x,y, pch = 19, col = rgb(.7, .5, 0, .3))
plot(x,y, pch = 19, col = rgb(0, .5, 0, .3))
plot(x,y, pch = 19, col = rgb(0, 1, 0, .3))
plot(x,y, pch = 19, col = rgb(0, 5, 0, .3))
plot(x,y, pch = 19, col = rgb(0, .05, 0, .3))
nxt()
cols <- brewer.pal(3, "BuGn")
showMe(cols)
?brewer.pal
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = pal(20), p1(20))
image(volcano, col = p1(20))
---
title: "Reproducible Research - Course Project 1"
output:
html_document:
keep_md: yes
---
## Loading and preprocessing the data
**1. Loading the data**
```{r}
if (!file.exists('activity.csv')) {
unzip(zipfile = "activity.zip")
}
activitydata <- read.csv("activity.csv")
```
**2. Transforming data as required**
```{r}
activitydata$date <- as.POSIXct(activitydata$date, format = "%Y-%m-%d")
```
## Histogram of total number of steps taken each day.
```{r total number of steps taken each day}
stepsperday <- aggregate(steps ~ date, activitydata, FUN = sum)
hist(stepsperday$steps, col = "gray", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day")
stepsmean <- mean(stepsperday$steps, na.rm = TRUE)
stepsmedian <- median(stepsperday$steps, na.rm = TRUE)
```
**Mean** of the total number of steps taken per day: **`r stepsmean`.**
**Median** of the total number of steps taken per day: **`r stepsmedian`.**
## Time series plot
```{r Time series plot}
avgstepsperday <- aggregate(steps ~ interval, activitydata, FUN = mean)
plot(avgstepsperday$interval, avgstepsperday$steps, type = "l", col = "Brown", lwd = 2, xlab = "5-minute intervals", ylab = "Average number of steps", main = "Average daily activity pattern")
maxstepsinterval <- avgstepsperday$interval[which.max(avgstepsperday$steps)]
```
On an average most steps were taken at interval **`r maxstepsinterval`**
## Imputing missing values
```{r}
totalNAs <- sum(is.na(activitydata))
```
Total number of missing values in the dataset is **`r totalNAs`**
**Imputed Data**
```{r}
imp_activitydata <- activitydata
imp_activitydata$steps[is.na(imp_activitydata$steps)] = avgstepsperday$steps[match(avgstepsperday$interval, imp_activitydata$interval)]
head(imp_activitydata)
```
```{r Total number of steps taken per day (Imputed data)}
imp_stepsperday <- aggregate(steps ~ date, imp_activitydata, FUN = sum)
hist(imp_stepsperday$steps, col = "purple", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day (Imputed data)")
imp_stepsmean <- mean(imp_stepsperday$steps, na.rm = TRUE)
imp_stepsmedian <- median(imp_stepsperday$steps, na.rm = TRUE)
```
**Mean** of the total number of steps taken per day (Imputed data): **`r imp_stepsmean`.**
**Median** of the total number of steps taken per day (Imputed data): **`r imp_stepsmedian`.**
**The only change observed between the two histograms for raw data and imputed data is the increase in frequency where 10000 to 15000 steps occured.**
## Differences in activity patterns between weekdays and weekends
```{r patterns between weekdays and weekends}
library(dplyr)
library(lattice)
week_activitydata <- imp_activitydata %>%
mutate(day = weekdays(date)) %>%
mutate(daytype = ifelse(day %in% c("Saturday","Sunday"), "weekend", "weekday"))
week_stepsperday <- aggregate(steps ~ interval + daytype, week_activitydata, FUN = mean)
xyplot(steps ~ interval | daytype, week_stepsperday, type="l", lwd=2, xlab="Interval", ylab="Number of steps", layout=c(1,2))
```
setwd "C:/Sowmya Temp/DS Coursera/Reproducible research/RepData_PeerAssessment1"
getwd()
setwd ("C:/Sowmya Temp/DS Coursera/Reproducible research/RepData_PeerAssessment1")
---
title: "Reproducible Research - Course Project 1"
output:
html_document:
keep_md: yes
---
## Loading and preprocessing the data
**1. Loading the data**
```{r}
if (!file.exists('activity.csv')) {
unzip(zipfile = "activity.zip")
}
activitydata <- read.csv("activity.csv")
```
**2. Transforming data as required**
```{r}
activitydata$date <- as.POSIXct(activitydata$date, format = "%Y-%m-%d")
```
## Histogram of total number of steps taken each day.
```{r total number of steps taken each day}
stepsperday <- aggregate(steps ~ date, activitydata, FUN = sum)
hist(stepsperday$steps, col = "gray", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day")
stepsmean <- mean(stepsperday$steps, na.rm = TRUE)
stepsmedian <- median(stepsperday$steps, na.rm = TRUE)
```
**Mean** of the total number of steps taken per day: **`r stepsmean`.**
**Median** of the total number of steps taken per day: **`r stepsmedian`.**
## Time series plot
```{r Time series plot}
avgstepsperday <- aggregate(steps ~ interval, activitydata, FUN = mean)
plot(avgstepsperday$interval, avgstepsperday$steps, type = "l", col = "Brown", lwd = 2, xlab = "5-minute intervals", ylab = "Average number of steps", main = "Average daily activity pattern")
maxstepsinterval <- avgstepsperday$interval[which.max(avgstepsperday$steps)]
```
On an average most steps were taken at interval **`r maxstepsinterval`**
## Imputing missing values
```{r}
totalNAs <- sum(is.na(activitydata))
```
Total number of missing values in the dataset is **`r totalNAs`**
**Imputed Data**
```{r}
imp_activitydata <- activitydata
imp_activitydata$steps[is.na(imp_activitydata$steps)] = avgstepsperday$steps[match(avgstepsperday$interval, imp_activitydata$interval)]
head(imp_activitydata)
```
```{r Total number of steps taken per day (Imputed data)}
imp_stepsperday <- aggregate(steps ~ date, imp_activitydata, FUN = sum)
hist(imp_stepsperday$steps, col = "purple", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day (Imputed data)")
imp_stepsmean <- mean(imp_stepsperday$steps, na.rm = TRUE)
imp_stepsmedian <- median(imp_stepsperday$steps, na.rm = TRUE)
```
**Mean** of the total number of steps taken per day (Imputed data): **`r imp_stepsmean`.**
**Median** of the total number of steps taken per day (Imputed data): **`r imp_stepsmedian`.**
**The only change observed between the two histograms for raw data and imputed data is the increase in frequency where 10000 to 15000 steps occured.**
## Differences in activity patterns between weekdays and weekends
```{r patterns between weekdays and weekends}
library(dplyr)
library(lattice)
week_activitydata <- imp_activitydata %>%
mutate(day = weekdays(date)) %>%
mutate(daytype = ifelse(day %in% c("Saturday","Sunday"), "weekend", "weekday"))
week_stepsperday <- aggregate(steps ~ interval + daytype, week_activitydata, FUN = mean)
xyplot(steps ~ interval | daytype, week_stepsperday, type="l", lwd=2, xlab="Interval", ylab="Number of steps", layout=c(1,2))
```
if (!file.exists('activity.csv')) {
unzip(zipfile = "activity.zip")
}
activitydata <- read.csv("activity.csv")
activitydata$date <- as.POSIXct(activitydata$date, format = "%Y-%m-%d")
stepsperday <- aggregate(steps ~ date, activitydata, FUN = sum)
hist(stepsperday$steps, col = "gray", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day")
stepsmean <- mean(stepsperday$steps, na.rm = TRUE)
stepsmedian <- median(stepsperday$steps, na.rm = TRUE)
avgstepsperday <- aggregate(steps ~ interval, activitydata, FUN = mean)
plot(avgstepsperday$interval, avgstepsperday$steps, type = "l", col = "Brown", lwd = 2, xlab = "5-minute intervals", ylab = "Average number of steps", main = "Average daily activity pattern")
maxstepsinterval <- avgstepsperday$interval[which.max(avgstepsperday$steps)]
totalNAs <- sum(is.na(activitydata))
totalNAs <- sum(is.na(activitydata))
imp_activitydata <- activitydata
imp_activitydata$steps[is.na(imp_activitydata$steps)] = avgstepsperday$steps[match(avgstepsperday$interval, imp_activitydata$interval)]
head(imp_activitydata)
imp_stepsperday <- aggregate(steps ~ date, imp_activitydata, FUN = sum)
hist(imp_stepsperday$steps, col = "purple", xlab = "Number of steps", ylab = "Frequency", main = "Total number of steps taken per day (Imputed data)")
imp_stepsmean <- mean(imp_stepsperday$steps, na.rm = TRUE)
imp_stepsmedian <- median(imp_stepsperday$steps, na.rm = TRUE)
library(dplyr)
library(lattice)
week_activitydata <- imp_activitydata %>%
mutate(day = weekdays(date)) %>%
mutate(daytype = ifelse(day %in% c("Saturday","Sunday"), "weekend", "weekday"))
week_stepsperday <- aggregate(steps ~ interval + daytype, week_activitydata, FUN = mean)
xyplot(steps ~ interval | daytype, week_stepsperday, type="l", lwd=2, xlab="Interval", ylab="Number of steps", layout=c(1,2))
opts_chunk$set(dev="png")
library(knitr)
opts_chunk$set(dev="png")
